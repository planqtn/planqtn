name: Cloud Integration Tests
run-name: ${{ github.actor }} is running cloud integration tests ðŸš€
concurrency:
  group: cloud-integration-tests
  cancel-in-progress: true
on:
  pull_request:
    paths:
      - "qlego/**"
      - "requirements.txt"
      - "requirements.dev.txt"
      - "app/conftest.py"

      - "app/supabase/**"
      - "app/migrations/**"
      - "app/planqtn_types/**"
      - "app/planqtn_api/**"
      - "app/planqtn_jobs/**"
      - "app/planqtn_cli/**"
      - "app/planqtn_fixtures/**"
      - "hack/*build*"

      - "check/**integration"
      - ".github/workflows/cloud_integration_tests.yml"
  push:
    paths:
      - "qlego/**"
      - "requirements.txt"
      - "requirements.dev.txt"
      - "app/conftest.py"

      - "app/supabase/**"
      - "app/migrations/**"
      - "app/planqtn_types/**"
      - "app/planqtn_api/**"
      - "app/planqtn_jobs/**"
      - "app/planqtn_cli/**"
      - "app/planqtn_fixtures/**"
      - "hack/*build*"

      - "check/**integration"
      - ".github/workflows/cloud_integration_tests.yml"

jobs:
  Cloud-Integration-Tests:
    environment: Continuous Integration
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install shared dependencies
        run: |
          pip install  -r requirements.txt -r requirements.dev.txt
      - name: Install vercel cli
        run: |
          npm install -g vercel
      - name: Install planqtn cli
        run: |
          hack/cli_build.sh --install
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cloud deploy
        env:
          # Secrets:
          # Description: Supabase database password
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          # Description: Supabase service key
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          # Description: Supabase anonymous key
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

          # Description: Vercel access token for GitHub Actions
          VERCEL_ACCESS_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
          # Description: Supabase access token for GitHub Actions
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          # Description: GCP service account credentials for GitHub Actions
          GCP_SVC_CREDENTIALS: ${{ secrets.GCP_SVC_CREDENTIALS }}

          # Vars:
          # Description: Docker repository (e.g., Docker Hub username or repo)
          # Default: planqtn
          DOCKER_REPO: ${{ vars.DOCKER_REPO }}
          # Description: Supabase project ID
          # Hint: Get it from your supabase project settings. Store it in /home/balopat/.planqtn/.config/supabase-project-id
          SUPABASE_PROJECT_REF: ${{ vars.SUPABASE_PROJECT_REF }}
          # Description: Environment
          # Default: development
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          # Description: GCP project ID
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          # Description: GCP region
          # Default: us-east1
          GCP_REGION: ${{ vars.GCP_REGION }}
          # Description: Terraform state bucket
          TERRAFORM_STATE_BUCKET: ${{ vars.TERRAFORM_STATE_BUCKET }}
          # Description: Terraform state prefix
          TERRAFORM_STATE_PREFIX: ${{ vars.TERRAFORM_STATE_PREFIX }}
          # Description: Vercel project ID
          VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}
          # Description: Vercel organization ID
          VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}

        run: |
          hack/htn cloud deploy -q --refuse-dirty-builds
      - uses: dorny/paths-filter@v3
         
        id: changes
        with:
          filters: |
            jobs: 
              - "app/planqtn_jobs/**"
            api:
              - "app/planqtn_api/**"                    
            common: 
              - "qlego/**"
              - "requirements.txt"
              - "requirements.dev.txt"
              - "conftest.py"
              - "app/supabase/**"
              - "app/migrations/**"
              - "app/planqtn_types/**"
              - "app/planqtn_fixtures/**"
              - ".github/workflows/integration_tests.yml"
              - "app/planqtn_cli/**"
              - "hack/*build*"

      - name: Run jobs integration tests
        env:
          KERNEL_ENV: cloud
        if: steps.changes.outputs.jobs == 'true' || steps.changes.outputs.common == 'true'
        run: |
          pip install -r app/planqtn_jobs/requirements.txt -r app/planqtn_jobs/requirements.dev.txt
          check/jobs-integration

      - name: Run api integration tests
        env:
          KERNEL_ENV: cloud
        if: steps.changes.outputs.api == 'true' || steps.changes.outputs.common == 'true'
        run: |
          pip install -r app/planqtn_api/requirements.txt -r app/planqtn_api/requirements.dev.txt
          check/api-integration
