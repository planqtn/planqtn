name: Cloud Integration Tests
run-name: ${{ github.actor }} is running cloud integration tests ðŸš€
concurrency:
  group: cloud-integration-tests
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
    paths:
      - "qlego/**"
      - "requirements.txt"
      - "requirements.dev.txt"
      - "app/conftest.py"

      - "app/supabase/**"
      - "app/migrations/**"
      - "app/planqtn_types/**"
      - "app/planqtn_api/**"
      - "app/planqtn_jobs/**"
      - "app/planqtn_cli/**"
      - "app/planqtn_fixtures/**"
      - "hack/*build*"

      - "check/**integration"
      - ".github/workflows/cloud_integration_tests.yml"
  push:
    paths:
      - "qlego/**"
      - "requirements.txt"
      - "requirements.dev.txt"
      - "app/conftest.py"

      - "app/supabase/**"
      - "app/migrations/**"
      - "app/planqtn_types/**"
      - "app/planqtn_api/**"
      - "app/planqtn_jobs/**"
      - "app/planqtn_cli/**"
      - "app/planqtn_fixtures/**"
      - "hack/*build*"

      - "check/**integration"
      - ".github/workflows/cloud_integration_tests.yml"

jobs:
  Cloud-Integration-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install shared dependencies
        run: |
          pip install  -r requirements.txt -r requirements.dev.txt
      - name: Install vercel cli
        run: |
          npm install -g vercel
      - name: Install planqtn cli
        run: |
          hack/cli_build.sh --install
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cloud deploy
        env:
          # Description: Docker repository (e.g., Docker Hub username or repo)
          # Default: planqtn
          PLANQTN_DOCKERREPO: ${{ secrets.PLANQTN_DOCKERREPO }}

          # Description: Supabase project ID
          # Hint: Get it from your supabase project settings. Store it in /home/balopat/.planqtn/.config/supabase-project-id
          PLANQTN_SUPABASEPROJECTREF: ${{ secrets.PLANQTN_SUPABASEPROJECTREF }}

          # Description: Supabase database password
          PLANQTN_DBPASSWORD: ${{ secrets.PLANQTN_DBPASSWORD }}

          # Description: Environment
          # Default: development
          PLANQTN_ENVIRONMENT: "development"

          # Description: GCP project ID
          PLANQTN_GCPPROJECTID: ${{ secrets.PLANQTN_GCPPROJECTID }}

          # Description: GCP region
          # Default: us-east1
          PLANQTN_GCPREGION: ${{ secrets.PLANQTN_GCPREGION }}

          # Description: Supabase service key
          PLANQTN_SUPABASESERVICEKEY: ${{ secrets.PLANQTN_SUPABASESERVICEKEY }}

          # Description: Supabase anonymous key
          PLANQTN_SUPABASEANONKEY: ${{ secrets.PLANQTN_SUPABASEANONKEY }}

          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

          GCP_SVC_CREDENTIALS: ${{ secrets.GCP_SVC_CREDENTIALS }}

          PLANQTN_TERRAFORMSTATEBUCKET: ${{ secrets.PLANQTN_TERRAFORMSTATEBUCKET }}

          PLANQTN_TERRAFORMSTATEPREFIX: ${{ secrets.PLANQTN_TERRAFORMSTATEPREFIX }}
          # Description: Vercel project ID
          PLANQTN_VERCELPROJECTID: ${{ secrets.PLANQTN_VERCELPROJECTID }}

          # Description: Vercel organization ID
          PLANQTN_VERCELORGID: ${{ secrets.PLANQTN_VERCELORGID }}

          VERCEL_ACCESS_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}

        run: |
          hack/htn cloud deploy -q
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            jobs: 
              - "app/planqtn_jobs/**"
            api:
              - "app/planqtn_api/**"                    
            common: 
              - "qlego/**"
              - "requirements.txt"
              - "requirements.dev.txt"
              - "conftest.py"
              - "app/supabase/**"
              - "app/migrations/**"
              - "app/planqtn_types/**"
              - "app/planqtn_fixtures/**"
              - ".github/workflows/integration_tests.yml"
              - "app/planqtn_cli/**"
              - "hack/*build*"

      - name: Run jobs integration tests
        env:
          KERNEL_ENV: cloud
        if: steps.changes.outputs.jobs == 'true' || steps.changes.outputs.common == 'true'
        run: |
          pip install -r app/planqtn_jobs/requirements.txt -r app/planqtn_jobs/requirements.dev.txt
          check/jobs-integration

      - name: Run api integration tests
        env:
          KERNEL_ENV: cloud
        if: steps.changes.outputs.api == 'true' || steps.changes.outputs.common == 'true'
        run: |
          pip install -r app/planqtn_api/requirements.txt -r app/planqtn_api/requirements.dev.txt
          check/api-integration
